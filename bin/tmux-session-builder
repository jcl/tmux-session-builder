# tmux-session-builder
#
# This POSIX shell (/bin/sh) script is intended to be sourced from other
# scripts, and not executed directly.


__script_identification="tmux-session-builder"


# setting default values for options
__option_verbose=true



__debug_tee_stdin_to_stderr() {
    if [ "${__debug}" = "true" ]; then
        tee /dev/stderr
    else
        cat
    fi
}

__debug_newline() {
    if [ "${__debug}" = "true" ]; then
        printf "\n" 1>&2
    fi
}

__debug() {
    if [ "${__debug}" = "true" ]; then
        printf "%s: DEBUG: %s\n" "${__script_identification}" "${*}" 1>&2
    fi
}

__verbose_without_script_identification() {
    if [ "${__option_verbose}" = "true" ]; then
        printf "%s\n" "${*}"
    fi
}

__verbose_without_newline() {
    if [ "${__option_verbose}" = "true" ]; then
        printf "%s: %s" "${__script_identification}" "${*}"
    fi
}

__verbose() {
    if [ "${__option_verbose}" = "true" ]; then
        printf "%s: %s\n" "${__script_identification}" "${*}"
    fi
}

__bail() {
    printf "%s: error: %s.  exiting.\n" "${__script_identification}" "${*}" 1>&2
    exit 1
}

__build_session_unless_exist() {
    __tmux_session_name="${1}"
    __template_filename="${2}"

    test -r ~/".tmux-session-builder/templates/${__template_filename}" \
        || __bail "template file ~/.tmux-session-builder/templates/${__template_filename} not readable (does it exist?)"

    tmux has-session -t "${__tmux_session_name}" 2>/dev/null || {
        __tmp_tmux_source_file="$(mktemp --tmpdir tmux-session-builder.${__tmux_session_name}.XXXXXXXXXXXX)"

        printf '# This file was generated by %s\n# at %s\n# from template file %s\n\n' \
               "${__script_identification}" \
               "$(date)" \
               ~/".tmux-session-builder/templates/${__template_filename}" \
               > "${__tmp_tmux_source_file}"

        sed -e "s,{{ tmux_session_name }},${__tmux_session_name},g" \
            ~/".tmux-session-builder/templates/${__template_filename}" \
            >> "${__tmp_tmux_source_file}"

        tmux new-session -d -s "${__tmux_session_name}" \
            || __bail "creating tmux session \"${__tmux_session_name}\" failed"

        tmux source-file "${__tmp_tmux_source_file}" \
            || __bail "\"tmux source-file\" command returned error"

        # TODO: disabled deletion of generated temporary tmux source file for now
        #rm -f "${__tmp_tmux_source_file}"
    }
}



_tsb_start() {
    # _tsb_start():
    #     Input data, required:
    #     * tmux session name string: will derive and validate this from $0 .
    #     * template filename: read from variable $_tsb_use_template .


    # attempt to derive the session name from $0,
    # bail if we fail to get a valid name:
    #
    # learned the ${0##*/} method from /bin/lzcmp on a Ubuntu 20.04 system.

    __debug "value of \${0}: ${0}"
    __debug "value of \${0##*/}: ${0##*/}"

    ___argv0_basename="${0##*/}"
    __debug "value of \$___argv0_basename: ${___argv0_basename}"

    case "${___argv0_basename}" in
        ,[a-z]* ) ___session_name="${___argv0_basename##,}";
                  __debug "value of \$___session_name: ${___session_name}" ;;
        * )       __bail 'sessionscript filename invalid: must be 2 or more' \
                         'characters, first characters must be ",", and' \
                         'second character must match shell pattern [a-z]' ;;
    esac


    # attempt to read the template filename from ${_tsb_use_template},
    # bail if we fail to get a valid filename:

    __debug "value of \$_tsb_use_template: $_tsb_use_template"

    case "${_tsb_use_template}" in
        [a-z]* ) ___template_name="${_tsb_use_template}";
                 __debug "value of \$___template_name: ${___template_name}" ;;
        * )      __bail 'template filename invalid: must be 1 or more' \
                        'characters, and first character must match shell' \
                        'pattern [a-z]' ;;
    esac


    # "attach-session" aka. "attach"
    __build_session_unless_exist "${___session_name}" "${___template_name}" \
        && tmux attach-session -d -t "${___session_name}"
}
